#
# Marlin Firmware
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf/index.html
#

# Automatic targets - enable auto-uploading
#targets = upload

[platformio]
src_dir      = Marlin
boards_dir   = buildroot/share/PlatformIO/boards
default_envs =  
  #MiniV2
  #MiniV3
  #TAZ6
  #Workhorse
  #TAZProV2
  TAZPro
  #TAZPro_BLTouch
  #TAZPro_Long_Bed
  #TAZProXT
  #TAZProXT_BLTouch
  #TAZProXT_Long_Bed
  #Sidekick_289
  #Sidekick_747
include_dir  = Marlin
extra_configs =
    ini/avr.ini
    ini/due.ini
    ini/esp32.ini
    ini/features.ini
    ini/hc32.ini
    ini/lpc176x.ini
    ini/native.ini
    ini/samd21.ini
    ini/samd51.ini
    ini/stm32-common.ini
    ini/stm32f0.ini
    ini/stm32f1-maple.ini
    ini/stm32f1.ini
    ini/stm32f4.ini
    ini/stm32f7.ini
    ini/stm32h7.ini
    ini/stm32g0.ini
    ini/teensy.ini
    ini/renamed.ini

#
# The 'common' section applies to most Marlin builds.
#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#
[common]
build_flags        = -g3 -D__MARLIN_FIRMWARE__ -DNDEBUG
                     -fmax-errors=5
extra_scripts      =
  pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
  pre:buildroot/share/PlatformIO/scripts/preflight-checks.py
  post:buildroot/share/PlatformIO/scripts/common-dependencies-post.py
lib_deps           =
default_src_filter = +<src/*> -<src/config> -<src/tests>
  ; LCDs and Controllers
  -<src/lcd/HD44780> -<src/lcd/dogm> -<src/lcd/TFTGLCD> -<src/lcd/tft> -<src/lcd/tft_io>
  -<src/lcd/e3v2> -<src/lcd/menu> -<src/lcd/extui> -<src/lcd/touch>
  -<src/lcd/lcdprint.cpp>
  ; Marlin HAL
  -<src/HAL>
  +<src/HAL/shared>
  -<src/HAL/shared/backtrace>
  -<src/HAL/shared/cpu_exception>
  -<src/HAL/shared/eeprom_if_i2c.cpp>
  -<src/HAL/shared/eeprom_if_spi.cpp>
  ; Features and G-Codes
  -<src/feature>
  -<src/gcode/bedlevel>
  -<src/gcode/calibrate>
  -<src/gcode/config>
  -<src/gcode/control>
  -<src/gcode/feature>
  -<src/gcode/geometry>
  -<src/gcode/host>
  -<src/gcode/lcd>
  -<src/gcode/motion>
  -<src/gcode/probe>
  -<src/gcode/scara>
  -<src/gcode/sd>
  -<src/gcode/temp>
  -<src/gcode/units>
  ; Library Code
  -<src/libs/heatshrink>
  -<src/libs/BL24CXX.cpp> -<src/libs/W25Qxx.cpp>
  -<src/libs/MAX31865.cpp>
  -<src/libs/hex_print.cpp>
  -<src/libs/least_squares_fit.cpp>
  -<src/libs/nozzle.cpp>
  ; Modules
  -<src/module>
  -<src/module/stepper>
  ; Media Support
  -<src/sd>
  ;
  ; Minimal Requirements
  ;
  +<src/gcode/calibrate/G28.cpp>
  +<src/gcode/config/M200-M205.cpp>
  +<src/gcode/config/M220.cpp>
  +<src/gcode/control/M17_M18_M84.cpp>
  +<src/gcode/control/M80_M81.cpp>
  +<src/gcode/control/M85.cpp>
  +<src/gcode/control/M108_*.cpp>
  +<src/gcode/control/M111.cpp>
  +<src/gcode/control/M120_M121.cpp>
  +<src/gcode/control/M999.cpp>
  +<src/gcode/geometry/G92.cpp>
  +<src/gcode/host/M110.cpp>
  +<src/gcode/host/M114.cpp>
  +<src/gcode/host/M118.cpp>
  +<src/gcode/host/M119.cpp>
  +<src/gcode/motion/G0_G1.cpp>
  +<src/gcode/motion/G4.cpp>
  +<src/gcode/motion/M400.cpp>
  +<src/gcode/temp/M105.cpp>
  +<src/module/endstops.cpp>
  +<src/module/motion.cpp>
  +<src/module/planner.cpp>
  +<src/module/settings.cpp>
  +<src/module/stepper.cpp>
  +<src/module/temperature.cpp>
  +<src/module/tool_change.cpp>
  +<src/module/stepper/indirection.cpp>

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework     = arduino
extra_scripts = ${common.extra_scripts}
build_flags   = ${common.build_flags}
lib_deps      = ${common.lib_deps}
monitor_speed = 250000
monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    colorize
  --filter
    time

#################################
#                               #
#   Unique Core Architectures   #
#                               #
#  Add a new "env" below if no  #
# entry has values suitable to  #
#   build for a given board.    #
#                               #
#################################

#################################
#                               #
#       AVR Architecture        #
#                               #
#################################



#
# Lulzbot Mini V2
#
[env:MiniV2]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DMiniV2
board         = megaatmega2560

#
# Lulzbot Mini V3
#
[env:MiniV3]
extends                     = stm32_variant
platform                    = ststm32@~15.4.1
platform_packages           = framework-arduinoststm32@~4.20200.220530
board                       = marlin_STM32H743Vx
board_build.offset          = 0x20000
board_upload.offset_address = 0x08020000
build_flags                 = ${stm32_variant.build_flags}
                              -DPIN_SERIAL1_RX=PA_10 -DPIN_SERIAL1_TX=PA_9
                              -DPIN_SERIAL3_RX=PD_9 -DPIN_SERIAL3_TX=PD_8
                              -DPIN_SERIAL4_RX=PA_1 -DPIN_SERIAL4_TX=PA_0
                              -DSERIAL_RX_BUFFER_SIZE=1024 -DSERIAL_TX_BUFFER_SIZE=1024
                              -DTIMER_SERVO=TIM5 -DTIMER_TONE=TIM2
                              -DSTEP_TIMER_IRQ_PRIO=0
                              -DD_CACHE_DISABLED
                              -DMiniV3
upload_protocol  = dfu
upload_flags     = -w 

#
# Taz 6
#
[env:TAZ6]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DTAZ6
board         = megaatmega2560

[env:Taz6DualZ]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DTAZ6 -DTazDualZ
board         = megaatmega2560

#
# Taz Workhorse
#
[env:Workhorse]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DWorkhorse
board         = megaatmega2560

[env:WorkhorseDualZ]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DWorkhorse  -DTazDualZ
board         = megaatmega2560

#
# TAZ Pro
#
[env:TAZProV2]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZProV2
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ Pro
#
[env:TAZPro]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZPro
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ Pro BLTouch
#
[env:TAZPro_BLTouch]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZPro -DLULZBOT_BLTouch
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ Pro Long Bed
#
[env:TAZPro_Long_Bed]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZPro -DLULZBOT_BLTouch -DLULZBOT_LONG_BED
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ PROXT
#
[env:TAZProXT]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZProXT
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ ProXT BLTouch
#
[env:TAZProXT_BLTouch]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZProXT -DLULZBOT_BLTouch
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# TAZ ProXT Long Bed
#
[env:TAZProXT_Long_Bed]
platform                 = atmelsam
extends                  = env:DUE
board                    = marlin_archim
build_flags              = ${common.build_flags}
  -DARDUINO_SAM_ARCHIM -DARDUINO_ARCH_SAM -D__SAM3X8E__ -DUSBCON -DTAZProXT -DLULZBOT_BLTouch -DLULZBOT_LONG_BED
board_build.variants_dir = buildroot/share/PlatformIO/variants/
extra_scripts            = ${common.extra_scripts}
  Marlin/src/HAL/DUE/upload_extra_script.py

#
# Lulzbot Sidekick 289
#
[env:Sidekick_289]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DSidekick_289
board         = megaatmega2560

#
# Lulzbot Sidekick 747
#
[env:Sidekick_747]
platform      = atmelavr
extends       = common_avr8
build_flags   = ${common.build_flags} -DSidekick_747
board         = megaatmega2560

#
# Just print the dependency tree
#
[env:include_tree]
platform         = atmelavr
board            = megaatmega2560
build_flags      = -c -H -std=gnu++11 -Wall -Os -D__MARLIN_FIRMWARE__
build_src_filter = +<src/MarlinCore.cpp>
